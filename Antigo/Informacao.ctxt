#BlueJ class context
comment0.target=Informacao
comment0.text=\n\ Classe\ responsavel\ por\ guardar\ a\ informacao\ num\ ficheiro\n\ \n\ @autor\ Filipe\ Barbosa\ A77252,\ Hugo\ Ferreira\ A78555,\ Nuno\ Morais\ A77368\n
comment1.params=
comment1.target=Informacao()
comment10.params=ui
comment10.target=void\ corrigirClassificacaoAtividadeEconomicaDespesaIndividual(Individual)
comment10.text=\n\ Funcao\ que\ permite\ corrigir\ a\ classificacao\ de\ atividade\ economica\ a\ uma\ despesa\n\ \n\ @param\ \ ui\ \ \ Utilizador\ que\ vai\ corrigir\ a\ classificacao\ de\ atividade\ economica\n\ @param\ \ i\ \ \ \ Estado\ da\ Informacao\n
comment11.params=ui
comment11.target=void\ associarAtividadeEconomica(Individual)
comment11.text=\n\ Funcao\ que\ permite\ associar\ uma\ atividade\ economica\ a\ uma\ despesa\ nao\ validada\n
comment12.params=ue
comment12.target=void\ criarFactura(Empresa)
comment12.text=\n\ Funcao\ para\ um\ utilizador\ criar\ uma\ factura\n\ \n\ @param\ \ ui\ \ \ Utilizador\ que\ vai\ criar\ a\ factura\n
comment13.params=ue
comment13.target=java.util.Set\ listaDespesaOrdenadaData(Empresa)
comment13.text=\n\ Mostra\ a\ lista\ de\ despesas\ associadas\ a\ uma\ empresa\ ordenada\ por\ data\n\ \n\ @param\ \ ue\ \ \ Empresa\ cujas\ despesas\ estao\ associadas\n
comment14.params=ue
comment14.target=java.util.Set\ listaDespesaOrdenadaValor(Empresa)
comment14.text=\n\ Lista\ de\ despesas\ associadas\ a\ uma\ empresa\ ordenadas\ por\ valor\n\ \n\ @param\ \ ue\ \ \ Empresa\ cujas\ despesas\ est\u00C3\u00A3o\ associadas\n
comment15.params=ue\ clienteNIF
comment15.target=java.util.Set\ listaDespesaContribuinteEntreData(Empresa,\ int)
comment15.text=\n\ Mostra\ a\ lista\ de\ despesas\ por\ parte\ de\ uma\ empresa\ de\ um\ contribuinte\ entre\ duas\ datas\n\ \n\ @param\ \ ue\ \ \ \ \ \ \ \ \ \ \ Empresa\ que\ verifica\ as\ despesas\ entre\ duas\ datas\n\ @param\ \ clienteNIF\ \ \ Contribuinte\ individual\ que\ vai\ ter\ as\ despesas\ verificadas\n
comment16.params=ue\ clienteNIF
comment16.target=java.util.Set\ listaDespesaContribuinteOrdenadaDecrescenteDespesa(Empresa,\ int)
comment16.text=\n\ Mostra\ a\ lista\ de\ despesas\ por\ parte\ de\ uma\ empresa\ por\ contribuinte\ por\ valor\ da\ despesa\ por\ ordem\ decrescente\n\ \n\ @param\ \ eu\ \ \ \ \ \ \ \ \ \ \ Empresa\ que\ verifica\ as\ despesas\n\ @param\ \ clienteNIF\ \ \ NIF\ do\ contribuinte\ individual\ que\ vai\ ter\ as\ despesas\ verificadas\n
comment17.params=ue
comment17.target=double\ totalFaturadoPeriodo(Empresa)
comment17.text=\n\ Funcao\ que\ da\ o\ total\ faturado\ por\ uma\ empresa\ num\ periodo\n\ \n\ @param\ \ ue\ \ \ Empresa\ que\ verifica\ o\ total\ fatorado\n\ \n\ @return\ \ tf\ \ \ Total\ fatorado\n
comment18.params=
comment18.target=java.util.TreeSet\ relacaoDezContribuintesMaisGastadores()
comment18.text=\n\ Funcao\ que\ da\ os\ 10\ contribuintes\ individuais\ mais\ gastadores\n\ \n\ @return\ \ ind\ \ \ TreeSet\ que\ contem\ os\ 10\ contribuintes\ individuais\ mais\ gastadores\n
comment19.params=x
comment19.target=java.util.TreeSet\ XEmpresasMaisFaturas(int)
comment19.text=\n\ Funcao\ que\ da\ as\ X\ empresas\ com\ mais\ faturas\n\ \n\ @return\ \ emp\ \ \ TreeSet\ com\ a\ lista\ das\ X\ empresas\ com\ mais\ faturas\n
comment2.params=numeroDespesa\ uti\ des\ fac
comment2.target=Informacao(int,\ java.util.Set,\ java.util.Set,\ java.util.Set)
comment2.text=\n\ Construtor\ parametrizado\ da\ classe\ Informacao\n\ \n\ @param\ \ numeroDespesa\ \ \ \ Numero\ de\ despesa\ criadas\n\ @param\ \ act\ \ \ \ \ \ \ \ \ \ \ \ \ \ Conjunto\ de\ Actores\n\ @param\ \ des\ \ \ \ \ \ \ \ \ \ \ \ \ \ Conjunto\ de\ despesas\n
comment20.params=x
comment20.target=java.util.Map\ montanteDeducaoFiscal(int)
comment20.text=\n\ Funcao\ que\ da\ Montante\ das\ deducoes\ fiscais\ das\ despesas\n\ \n\ @return\ \ \n
comment21.params=
comment21.target=java.util.Set\ imprimeIndividual()
comment21.text=\n\ Funcao\ que\ imprime\ todos\ os\ utilizadores\ individuais\n
comment22.params=
comment22.target=java.util.Set\ imprimeEmpresa()
comment22.text=\n\ Funcao\ que\ imprime\ todas\ as\ empresas\n
comment23.params=
comment23.target=java.util.Set\ imprimeDespesa()
comment23.text=\n\ Funcao\ que\ imprime\ todas\ as\ despesas\n
comment24.params=
comment24.target=java.util.Set\ listaFaturaAtividadeCorrigida()
comment24.text=\n\ Funcao\ que\ da\ a\ lista\ das\ despesa\ com\ atividades\ economicas\ alteradas\n\ \n\ @return\ \ Lista\ de\ despesas\ com\ atividades\ corrigidas\n
comment25.params=
comment25.target=java.util.Set\ getUtilizador()
comment25.text=\n\ Metodo\ que\ devolve\ o\ conjunto\ de\ Actores\n
comment26.params=
comment26.target=java.util.Set\ getDespesa()
comment26.text=\n\ Metodo\ que\ devolve\ o\ conjunto\ de\ Despesas\n
comment27.params=
comment27.target=Informacao\ clone()
comment27.text=\n\ Metodo\ clone\ da\ classe\ Informacao\n
comment28.params=NIF
comment28.target=Actor\ getActor(int)
comment28.text=\n\ Procura\ um\ Actor\ (Individual\ ou\ Empresa)\ que\ esteja\ registado\ no\ sistema\n\ \n\ @param\ \ \ NIF\ \ \ NIF\ do\ actor\n\ @return\ \ a\ \ \ \ \ Devolve\ um\ Actor\ ou\ null\ caso\ nao\ exista\n
comment29.params=emitenteNIF
comment29.target=Despesa\ getDespesa(int)
comment29.text=\n\ Procura\ uma\ despeja\ que\ esteja\ registado\ no\ sistema\n\ \n\ @param\ \ \ emitenteNIF\ \ \ NIF\ do\ emitente\n\ @return\ \ d\ \ \ \ \ \ \ \ \ \ \ \ \ Devolve\ uma\ Despesa\ ou\ null\ caso\ nao\ exista\n
comment3.params=i
comment3.target=Informacao(Informacao)
comment3.text=\n\ Construtor\ de\ copia\ da\ classe\ Informacao\n
comment30.params=a
comment30.target=void\ adicionaUtilizador(Actor)
comment30.text=\n\ Metodo\ que\ adiciona\ um\ utilizador\ ao\ conjunto\ de\ utilizadores\n\ \n\ @param\ \ a\ \ \ Utilizador\n
comment31.params=d
comment31.target=void\ adicionaDespesa(Despesa)
comment31.text=\n\ Metodo\ que\ adiciona\ uma\ despesa\ ao\ conjunto\ de\ despesas\n\ \n\ @param\ \ d\ \ \ Despesa\n
comment32.params=fac
comment32.target=void\ adicionaFaturaAtividadeCorrigida(FaturaAtividadeCorrigida)
comment32.text=\n\ Metodo\ que\ adiciona\ o\ registo\ de\ uma\ fatura\ corrigida\n\ \n\ @param\ \ fac\ \ \ Fatura\ com\ atividade\ corrigida\n
comment33.params=a
comment33.target=void\ removeUtilizador(Actor)
comment33.text=\n\ Metodo\ que\ remove\ uma\ utilizador\ do\ conjunto\ de\ utilizadores\n\ \n\ @param\ \ a\ \ \ Utilizador\n
comment34.params=d
comment34.target=void\ removeDespesa(Despesa)
comment34.text=\n\ Metodo\ que\ remove\ uma\ despesa\ do\ conjunto\ de\ despesas\n\ \n\ @param\ \ d\ \ \ Despesa\n
comment4.params=
comment4.target=int\ getNumeroDespesa()
comment4.text=\n\ Metodo\ que\ devolve\ o\ numero\ de\ despesa\ criadas\n\ \n\ @return\ \ Numero\ de\ despesas\ criadas\n
comment5.params=numeroDespesa
comment5.target=void\ setNumeroDespesa(int)
comment5.text=\n\ Metodo\ que\ define\ o\ numero\ de\ despesas\ criadas\n\ \n\ @param\ \ numeroDespesa\ \ \ Novo\ numero\ de\ despesa\n
comment6.params=
comment6.target=Informacao\ carregaObjetoInformacao()
comment6.text=\n\ Carrega\ num\ ficheiro\ um\ objecto\ da\ classe\ Informacao\ (esse\ ficheiro\ tem\ sempre\ o\ nome\ BaseDados)\n
comment7.params=
comment7.target=void\ gravaObjetoInformacao()
comment7.text=\n\ Guarda\ num\ ficheiro\ um\ objecto\ da\ classe\ Informacao\ (esse\ ficheiro\ tem\ sempre\ o\ nome\ BaseDados)\n
comment8.params=ui
comment8.target=java.util.Set\ verificarDespesas(Individual)
comment8.text=\n\ Funcao\ que\ permite\ verificar\ as\ despesas\ emitidas\ por\ um\ utilizador\n\ \n\ @param\ \ ui\ \ \ Utilizador\ que\ verifica\ as\ suas\ despesas\n
comment9.params=ui
comment9.target=double\ verificarMontanteDeducaoFiscal(Individual)
comment9.text=\n\ Funcao\ que\ permite\ verificar\ o\ montante\ de\ deducao\ fiscal\ acumulado\ por\ o\ contribuinte\ individual\ e\ pelo\ seu\ agregado\n\ \n\ @param\ \ \ ui\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Utilizador\ que\ verifica\ o\ montante\ de\ deducao\ fiscal\n\ @return\ \ a.getCoeficienteFiscal\ \ \ Montante\ de\ deducao\ fiscal\n
numComments=35
